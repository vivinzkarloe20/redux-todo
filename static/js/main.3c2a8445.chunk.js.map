{"version":3,"sources":["components/Todos/Todos.js","store/actions/todos.js","store/actions/actionTypes.js","components/Todos/AddTodo.js","App.js","store/reducers/todos.js","index.js"],"names":["Todos","_this","this","todoList","props","todos","length","map","todo","react_default","a","createElement","className","key","id","style","textDecoration","completed","onClick","completeTodo","content","deleteTodo","Component","connect","state","dispatch","type","payload","actionCreators","AddTodo","_this2","onSubmit","e","preventDefault","data","uuid","addTodo","setState","placeholder","onChange","target","value","App","Todos_AddTodo","components_Todos_Todos","initialState","reducer","arguments","undefined","action","Object","objectSpread","concat","updatedTodo","filter","res","selectTodo","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3c2a8445.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nclass Todos extends Component {\r\n    render(){\r\n        const handleDelete = (id) => {\r\n            this.props.deleteTodo(id)\r\n        }\r\n\r\n        const handleComplete = (id) => {\r\n            this.props.completeTodo(id)\r\n        }\r\n\r\n        const todoList = this.props.todos.length ? (\r\n            this.props.todos.map(todo => {\r\n                return(\r\n                    <div className=\"collection-item\" key={todo.id} >\r\n                        <span style={{textDecoration: todo.completed ? 'line-through' : 'none'}} onClick={() => handleComplete(todo.id)}>{todo.content}</span>\r\n                        <button className=\"btn-small right\" onClick={() => handleDelete(todo.id)}>X</button>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <p className=\"center\">You have nothing listed.</p>\r\n        );\r\n\r\n        return(\r\n            <div className=\"todos collection\">\r\n                {todoList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const Todos = ({ todos, props }) => {\r\n\r\n//     console.log(props)\r\n//     const handleDelete = (id) => {\r\n//         // props.deleteTodo()\r\n//         console.log(props);\r\n//     }\r\n\r\n//     const todoList = todos.length ? (\r\n//         todos.map(todo => {\r\n//             return(\r\n//                 <div className=\"collection-item\" key={todo.id} onClick={() => handleDelete(todo.id)}>\r\n//                     {todo.content}\r\n//                 </div>\r\n//             )\r\n//         })\r\n//     ) : (\r\n//         <p className=\"center\">Test</p>\r\n//     );\r\n\r\n//     return (\r\n//         <div className=\"todos collection\">\r\n//             {todoList}\r\n//         </div>\r\n//     )\r\n    \r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteTodo: (id) => dispatch(actionCreators.deleteTodo(id)),\r\n        completeTodo: (id) => dispatch(actionCreators.completeTodo(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as actionTypes from './actionTypes';\r\n\r\nexport const addTodo = (data) => {\r\n    return {\r\n        type: actionTypes.ADD_TODO,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: actionTypes.DELETE_TODO,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const completeTodo = (id) => {\r\n    return {\r\n        type: actionTypes.COMPLETE_TODO,\r\n        payload: id\r\n    }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport uuid from 'uuid';\r\n\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nclass AddTodo extends Component {\r\n    state = {\r\n        id: '',\r\n        content: '',\r\n        completed: false\r\n    }\r\n    render() {\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            const data = {\r\n                id: uuid(),\r\n                content: this.state.content,\r\n                completed: false\r\n            }\r\n            this.props.addTodo(data);\r\n            this.setState({\r\n                content: ''\r\n            })\r\n        }\r\n\r\n        const handleChange = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            })\r\n        }\r\n    \r\n        return (\r\n            <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input placeholder=\"Add a todo...\" type=\"text\" onChange={handleChange} value={this.state.content}></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTodo: (data) => dispatch(actionCreators.addTodo(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTodo);","import React from 'react';\r\n\r\nimport Todos from './components/Todos/Todos';\r\nimport AddTodo from './components/Todos/AddTodo';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className=\"todo-app container\">\r\n            <h1 className=\"center blue-text\">Todos</h1>\r\n            <AddTodo />\r\n            <Todos />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import * as actionTypes from '../../store/actions/actionTypes';\r\n// import * as updateObject from '../../store/utility';\r\n\r\nconst initialState = {\r\n    todos: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_TODO:\r\n            return { \r\n                ...state,\r\n                todos: state.todos.concat(action.payload)\r\n        }\r\n        case actionTypes.DELETE_TODO:\r\n            const updatedTodo = state.todos.filter(res => res.id !== action.payload);\r\n            return {\r\n                ...state,\r\n                todos: updatedTodo\r\n            }\r\n        case actionTypes.COMPLETE_TODO:\r\n            const selectTodo =  state.todos.map(todo =>\r\n                todo.id === action.payload ? {...todo, completed: !todo.completed} : todo\r\n            )\r\n            return {\r\n                ...state,\r\n                todos: selectTodo\r\n            }\r\n        default:  \r\n            return state;      \r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport rootReducer from './store/reducers/todos';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));"],"sourceRoot":""}